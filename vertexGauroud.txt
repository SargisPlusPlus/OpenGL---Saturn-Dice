#version 330
 
uniform mat4 viewMatrix, projMatrix;
uniform mat3 normalMatrix;

uniform vec4 Ambient;
uniform vec3 LightColor;
uniform vec3 LightPosition;
uniform float Shininess;
uniform float Strength;
uniform vec3 EyeDirection;


layout (location = 0) in vec4 position;
in vec3 normal;
in vec3 color;

layout(location = 1) in vec2 vertexUV;
 
out vec3 Color;
out vec3 Normal;
out vec4 Position;

// UV is the texture coordinate of this vertex
out vec2 UV;

void main()
{
	vec3 V = normalize(EyeDirection);
	vec3 L, H, amb, dif, spe;
	L = LightPosition - vec3(position);
	Normal = normalize(normalMatrix * normal);
	L = normalize(L);
	H = L + V;
	H = normalize(H);
	amb = Ambient.rgb;
	dif = max(dot(Normal,L), 0)*LightColor;
	dif = min(dif,1.0);
	spe = pow(max(dot(H, Normal),0),Shininess) * LightColor;
	spe = min(spe,1.0);
    Color = color * (amb+dif+spe);
	UV = vertexUV;
	// You need to multiply the projection (projMatrix) matrices and the model view (viewMatrix) and with the position in correct order
	// After this step you should be able too see a blue cube in the middle of the window
    gl_Position = projMatrix * viewMatrix * position;
}